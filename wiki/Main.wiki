#summary This page presents "PANDA-AEmilia": Performance Antipatterns aNd feeDback on software Architectures, specified in the AEmilia Description Language.

= Details =

The content of this project is here reported:

  * The specification of a metamodel ([http://code.google.com/p/panda-aemilia/wiki/AEmiliaMetamodel see more details]), based on the _Performance Antipatterns Modeling Language (PAML)_, containing the architectural model elements of AEmilia, please refer to Downloads/metamodel.zip.

  * The specification of Text-to-Model Transformation Rules that allows the transformation of an AEmilia specification (file.aem) into an AEmilia model, please refer to Downloads/text2ModelTransf.zip.

  * The detection tool that allows the detection of software performance antipatterns in the AEmilia model by means of OCL rules, please refer to Downloads/detectionTool.zip.

  * The user guide that explains how-to-use metamodel, text2ModelTransf, and detectionTool sources, please refer to Downloads/PANDA-AEmilia-userGuide.pdf.

  * PANDA-AEmilia at work on a case study ([http://code.google.com/p/panda-aemilia/wiki/BoAcaseStudy see more details]): Bus On Air, i.e. a system aimed at developing a set of services for public transportation, please refer to Downloads/BoA-caseStudy.zip.



= References =

[AEmilia-ADL] M. Bernardo, P. Ciancarini, and L. Donatiello, “Architecting families of software systems with process algebras,” ACM
Trans. Softw. Eng. Methodol., vol. 11, no. 4, pp. 386–426, 2002.